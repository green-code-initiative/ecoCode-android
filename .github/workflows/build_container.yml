---
# template source: https://github.com/bretfisher/docker-build-workflow/blob/main/templates/call-docker-build.yaml
name: Docker Build

on:
  push:
    branches:
      - main
    tags:
      - '*'
#  pull_request:
#    branches:
#      - main

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: sonarqube-creedengo-android
  IMAGES: |
    ghcr.io/${{ github.repository_owner }}/sonarqube-creedengo-android
  PLATFORMS: linux/amd64,linux/arm64/v8
jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ${{ env.IMAGES }}
          flavor: |
            latest=auto
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=semver,event=tag,pattern={{version}}
            type=semver,event=tag,pattern={{major}}.{{minor}}
            type=semver,event=tag,pattern={{major}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and publish image
        id: push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          pull: true
          cache-to: type=gha,mode=max
          cache-from: type=gha,mode=max
